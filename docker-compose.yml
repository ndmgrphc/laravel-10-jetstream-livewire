version: '3.7'
services:
  app:
    build:
      args:
        user: webuser
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: ap-laravel
    container_name: ap-app
    restart: unless-stopped
    logging:
      options:
        max-size: "5k"
    ports:
      - '${FORWARD_VITE_PORT:-5173}:5173'
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./dev/docker-compose/php/app.ini:/usr/local/etc/php/conf.d/app.ini
    extra_hosts:
      # docker inspect ap-app | grep Gateway
      - host.docker.internal:host-gateway
    networks:
      - ap

  nginx:
    image: nginx:alpine
    container_name: ap-nginx
    restart: unless-stopped
    logging:
      options:
        max-size: "5k"
    ports:
      - '${FORWARD_NGINX_PORT:-80}:80'
    volumes:
      - ./:/var/www
      - ./dev/docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - ap

  worker-local:
    build:
      context: ./
      dockerfile: ./dev/docker-compose/worker-local/Dockerfile
      args:
        queueTimeout: 30
        queueTries: 2
        queues: default,indexing,notifications
    image: ap-worker-local
    container_name: ap-worker-local
    restart: unless-stopped
    logging:
      options:
        max-size: "5k"
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./dev/docker-compose/php/app.ini:/usr/local/etc/php/conf.d/app.ini
    extra_hosts:
        # docker inspect ap-app | grep Gateway
        - host.docker.internal:host-gateway
    networks:
      - ap

  mysql:
    image: mysql
    command: mysqld --sql_mode=""
    container_name: ap-mysql
    restart: unless-stopped
    logging:
      options:
        max-size: "5k"
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME} cannot use this anymore
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./dev/docker-compose/mysql:/docker-entrypoint-initdb.d
      #- ./dev/docker-compose/mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf:delegated
    networks:
      - ap

  redis:
    build:
      context: ./
      dockerfile: ./dev/docker-compose/redis/Dockerfile
    #image: 'redis:alpine'
    privileged: true
    command: sh -c "/redis/init.sh"
    volumes:
      - ./dev/docker-compose/redis/redis.conf:/usr/local/etc/redis/redis.conf
      #- ./dev/docker-compose/redis/init.sh:/redis/init.sh
    restart: unless-stopped
    container_name: ap-redis
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    networks:
      - ap
    logging:
      options:
        max-size: "5k"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

networks:
  ap:
    driver: bridge
